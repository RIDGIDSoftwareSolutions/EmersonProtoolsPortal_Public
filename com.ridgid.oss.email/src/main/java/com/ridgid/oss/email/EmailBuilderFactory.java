package com.ridgid.oss.email;

import org.apache.commons.mail.EmailException;
import org.apache.commons.mail.HtmlEmail;

import java.util.Map;

@SuppressWarnings("WeakerAccess")
public class EmailBuilderFactory {
    private final String host;
    private final int port;
    private final String defaultHtmlTemplate;
    private final Map<String, String> themes;
    private final Map<String, String> embeddedResources;

    /**
     * Specify the information to be used by all constructed {@code EmailBuilder} instances.
     * @param host The host of the email server
     * @param port The port of the email server
     * @param defaultHtmlTemplate The default HTML template to use.  This template should include any styling for the HTML generated by the markdown
     * @param themes A map of theme names to their HTML templates
     * @param embeddedResources A map of commonly used resources that should be automatically embedded into every email
     */
    public EmailBuilderFactory(String host, int port, String defaultHtmlTemplate, Map<String, String> themes, Map<String, String> embeddedResources) {
        this.host = host;
        this.port = port;
        this.defaultHtmlTemplate = defaultHtmlTemplate;
        this.themes = themes;
        this.embeddedResources = embeddedResources;
    }

    public EmailBuilder createBuilder() {
        HtmlEmail htmlEmail = createEmail();
        htmlEmail.setHostName(host);
        htmlEmail.setSmtpPort(port);
        embeddedResources.forEach((cid, url) -> {
            try {
                htmlEmail.embed(url, cid);
            } catch (EmailException e) {
                throw new RuntimeException(e);
            }
        });
        return new EmailBuilder(htmlEmail, defaultHtmlTemplate, themes);
    }

    protected HtmlEmail createEmail() {
        return new HtmlEmail();
    }
}
